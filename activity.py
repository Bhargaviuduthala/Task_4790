# -*- coding: utf-8 -*-
"""Activity.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k-6mqSJdUs__oSTCA9o25bbrcmLmC0N_
"""

import pandas as pd
import numpy as np

data = pd.read_excel('Bank_Personal_Loan_Modelling.xlsx')

data.head(5)

data.tail(5)

data.shape

data.size

#Let's Check if the data contains any missing or NaN values.
data.isnull().any()

data.info()

data.isnull().sum()

data.nunique()

categorical_variable = [col for col in data.columns if data[col].nunique()<=5]
print(categorical_variable)
continuous_variable = [col for col in data.columns if data[col].nunique()>5]
print(continuous_variable)

data.dtypes

cat_attr = (['Family','Education','Personal Loan','Securities Account','CD Account','Online','CreditCard'])
for col in cat_attr:
  data[col]=data[col].astype('category')

data.dtypes

data.drop(['ID','ZIP Code'],axis=1,inplace=True)

data.describe().transpose()

from sklearn.model_selection import train_test_split

y=data['Personal Loan']
X = data.drop(['Personal Loan'],axis=1)
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20,random_state=145)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)

from sklearn.linear_model import LogisticRegression

lr=LogisticRegression()

lr.fit(X_train,y_train)

X_train_pred=lr.predict(X_train)
X_test_pred=lr.predict(X_test)

from sklearn.metrics import accuracy_score,classification_report,confusion_matrix

print(classification_report(y_test,X_test_pred))
print(confusion_matrix(y_test,X_test_pred))

accuracy_score(y_train,X_train_pred)

accuracy_score(y_test,X_test_pred)

from sklearn.tree import DecisionTreeClassifier

DT=DecisionTreeClassifier()

DT.fit(X_train,y_train)

X_train_pred=DT.predict(X_train)
X_test_pred=DT.predict(X_test)

accuracy_score(y_train,X_train_pred)

accuracy_score(y_test,X_test_pred)

import pickle
pickle.dump(lr,open('model.pkl','wb'))
model = pickle.load(open('model.pkl','rb'))